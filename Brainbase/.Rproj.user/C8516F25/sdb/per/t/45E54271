{
    "contents" : "#S4 NIdata class for Neuroimaging data\n#For details on Fields in NIFTI header, Refer to: http://nifti.nimh.nih.gov/nifti-1/documentation/nifti1fields\n\n#set the data classes, either 2D or 4D\n.BCoData2D <- setClass(\"BCoData2D\", representation(mat = \"matrix\", mask = \"numeric\", base.dim =\n  \"numeric\"))\n\n.BCoData4D <- setClass(\"BCoData4D\", representation(mat = \"array\"))\n\n.BCoData2DReduc <- setClass(\"BCoData2DReduc\", representation(mat = \"matrix\", col.mapping = \"numeric\", \n  type = \"character\"))\n\nsetClassUnion(\"BCoData\", c(\"BCoData2D\", \"BCoData4D\", \"BCoData2DReduc\"))\n\n#set the base class\n.BCoBase <- setClass(\"BCoBase\", representation(data = \"BCoData\", notes = \"character\"))\n\n.scanner_info <- setClass(\"scanner_info\",\n         representation(\"sizeof_hdr\"=\"numeric\",\n                        \"data_type\"=\"character\",\n                        \"db_name\"=\"character\",\n                        \"extents\"=\"numeric\",\n                        \"session_error\"=\"numeric\",\n                        \"regular\"=\"character\",\n                        \"dim_info\"=\"character\",\n                        \"dim_\"=\"vector\",\n                        \"intent_p1\"=\"numeric\",\n                        \"intent_p2\"=\"numeric\",\n                        \"intent_p3\"=\"numeric\",\n                        \"intent_code\"=\"numeric\",\n                        \"datatype\"=\"numeric\",\n                        \"bitpix\"=\"numeric\",\n                        \"slice_start\"=\"numeric\",\n                        \"pixdim\"=\"vector\",\n                        \"vox_offset\"=\"numeric\",\n                        \"scl_slope\"=\"numeric\",\n                        \"scl_inter\"=\"numeric\",\n                        \"slice_end\"=\"numeric\",\n                        \"slice_code\"=\"character\", # character?\n                        \"xyzt_units\"=\"character\", # character?\n                        \"cal_max\"=\"numeric\",\n                        \"cal_min\"=\"numeric\",\n                        \"slice_duration\"=\"numeric\",\n                        \"toffset\"=\"numeric\",\n                        \"glmax\"=\"numeric\",\n                        \"glmin\"=\"numeric\",\n                        \"descrip\"=\"character\",\n                        \"aux_file\"=\"character\",\n                        \"qform_code\"=\"numeric\",\n                        \"sform_code\"=\"numeric\",\n                        \"quatern_b\"=\"numeric\",\n                        \"quatern_c\"=\"numeric\",\n                        \"quatern_d\"=\"numeric\",\n                        \"qoffset_x\"=\"numeric\",\n                        \"qoffset_y\"=\"numeric\",\n                        \"qoffset_z\"=\"numeric\",\n                        \"srow_x\"=\"vector\",\n                        \"srow_y\"=\"vector\",\n                        \"srow_z\"=\"vector\",\n                        \"intent_name\"=\"character\",\n                        \"magic\"=\"character\",\n                        \"extender\"=\"character\",\n                        \"extention\"=\"list\",\n                        \"file_type\" = \"character\",\n                        \"image\" = \"array\"),\n         prototype(\"sizeof_hdr\"=348,\n                   \"data_type\"=\"\",\n                   \"db_name\"=\"\",\n                   \"extents\"=numeric(1),\n                   \"session_error\"=numeric(1),\n                   \"regular\"=\"\",\n                   \"dim_info\"=\"\",\n                   \"dim_\"=numeric(8),\n                   \"intent_p1\"=numeric(1),\n                   \"intent_p2\"=numeric(1),\n                   \"intent_p3\"=numeric(1),\n                   \"intent_code\"=numeric(1),\n                   \"datatype\"=2,\n                   \"bitpix\"=8,\n                   \"slice_start\"=numeric(1),\n                   \"pixdim\"=numeric(8),\n                   \"vox_offset\"=352,\n                   \"scl_slope\"=numeric(1),\n                   \"scl_inter\"=numeric(1),\n                   \"slice_end\"=numeric(1),\n                   \"slice_code\"=\"\",\n                   \"xyzt_units\"=\"\",\n                   \"cal_max\"=numeric(1),\n                   \"cal_min\"=numeric(1),\n                   \"slice_duration\"=numeric(1),\n                   \"toffset\"=numeric(1),\n                   \"glmax\"=numeric(1),\n                   \"glmin\"=numeric(1),\n                   \"descrip\"=\"\",\n                   \"aux_file\"=\"\",\n                   \"qform_code\"=numeric(1),\n                   \"sform_code\"=numeric(1),\n                   \"quatern_b\"=numeric(1),\n                   \"quatern_c\"=numeric(1),\n                   \"quatern_d\"=numeric(1),\n                   \"qoffset_x\"=numeric(1),\n                   \"qoffset_y\"=numeric(1),\n                   \"qoffset_z\"=numeric(1),\n                   \"srow_x\"=numeric(4),\n                   \"srow_y\"=numeric(4),\n                   \"srow_z\"=numeric(4),\n                   \"intent_name\"=\"\",\n                   \"magic\"=\"n+1\",\n                   \"extender\"=\"\",\n                   \"extention\"=list(esize=0,ecode=0,edata=\"\"),\n                   \"image\"=array(1:4,dim=c(2,2)))\n\n)\n\n#set the NIdata type\n\n.NIdata <- setClass(\"NIdata\",\n representation(phenotype = \"list\", scanner_info = \"scanner_info\", extra = \"list\", \n ID = \"character\"), contains = \"BCoBase\")\n\n.Template <- setClass(\"Template\", contains = \"BCoBase\")\n\n#WARNING: Now that I think about it, these three might be just\n# effectively all be the same...\nsetClass(\"Parcellation\", representation(names = \"data.frame\"), contains = \"BCoBase\")\nsetClass(\"RegionofInterest\", contains = \"BCoBase\")\nsetClass(\"TissuePriors\", representation(tissue = \"character\"), \n  contains = \"BCoBase\", prototype(data = list()))\n\n\nsetMethod(\"show\", \"NIdata\", function(object){\n  if(length(object@ID) == 0) subj.name = \"(Unidentified Subject)\" else subj.name = paste0(\"Subject \", object@ID)\n  cat(paste0(\"NIdata object for \", subj.name, \"\\n\"))\n\n  if(all(dim(object@data@mat) == 0)){\n    cat(\"  No data stored in NIdata.\\n\")\n  } else {\n    if(class(object@data) == \"BCoData2D\"){\n      perc = length(which(object@data@mat[1,] != 0))\n\n      cat(paste0(\"  2-Dimensional data representing a 4D image of dimension \",\n        paste0(object@data@base.dim, collapse = \", \"), \":\\n    \", nrow(object@data@mat), \n        \" elements in series, \", perc,\n        \" voxels active (\", round(100*perc/ncol(object@data@mat), 2), \n        \"% of all voxels in mask).\\n\"))\n    } else if (class(object@data) == \"BCoData4D\") {\n      cat(paste0(\"  4-Dimensional data of dimension \", \n        paste0(dim(object@data@mat), collapse = \", \"), \": \", nrow(object@data@mat),\n        \" elements in series.\\n\"))\n \n    } else if (class(object@data) == \"BCoData2DReduc\") {\n      cat(paste0(\"  2-Dimensional data reduced from voxel-level data. \",\n       nrow(object@data@mat), \" elements in series, \", ncol(object@data@mat),\n       \" different series.\\n\"))\n    }\n  }\n\n  cat(paste0(\"  Object consumes about \", round(as.numeric(object.size(object))/1048576, 2), \" megabytes.\\n\"))\n\n  cat(paste0(\"  Object has slots: \", paste0(names(getSlots(class(object))), collapse = \", \"), \".\\n\"))\n})\n",
    "created" : 1457789696312.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1987237325",
    "id" : "45E54271",
    "lastKnownWriteTime" : 1458035431,
    "path" : "~/GitHub/BrainConductor/Brainbase/R/NIdata.R",
    "project_path" : "R/NIdata.R",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "type" : "r_source"
}